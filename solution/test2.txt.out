Nodes: ['x', 'list args', 'x', 2, '+', 'x', None, 'Sequence', 'null', 'return operator', 'function body', 'declaration function Foo', 'function declaration block', 1, 2, '+', 'return operator', 'function body', 'declaration function Baz', 'function declaration block', 1, 2, 3, '*', '+', 'x', None, 'skip', 'Sequence', 'Sequence', 'null', 'return operator', 'function body', 'Initial node', 'main']
Adjacency list: {0: [], 1: [0], 2: [], 3: [], 4: [2, 3], 5: [], 6: [5, 4], 7: [6], 8: [], 9: [8], 10: [7, 9], 11: [1, 10], 12: [11, 18], 13: [], 14: [], 15: [13, 14], 16: [15], 17: [16], 18: [17], 19: [11, 18], 20: [], 21: [], 22: [], 23: [21, 22], 24: [20, 23], 25: [], 26: [25, 24], 27: [], 28: [27], 29: [26, 28], 30: [], 31: [30], 32: [29, 31], 33: [19, 34], 34: [32]}
Node 33 : Initial node
Edges to nodes [19, 34]

Node 19 : function declaration block
Edges to nodes [11, 18]

Node 11 : declaration function Foo
Edges to nodes [1, 10]

Node 1 : list args
Edges to nodes [0]

Node 0 : x

Node 10 : function body
Edges to nodes [7, 9]

Node 7 : Sequence
Edges to nodes [6]

Node 6 : None
Edges to nodes [5, 4]

Node 5 : x

Node 4 : +
Edges to nodes [2, 3]

Node 2 : x

Node 3 : 2

Node 9 : return operator
Edges to nodes [8]

Node 8 : null

Node 18 : declaration function Baz
Edges to nodes [17]

Node 17 : function body
Edges to nodes [16]

Node 16 : return operator
Edges to nodes [15]

Node 15 : +
Edges to nodes [13, 14]

Node 13 : 1

Node 14 : 2

Node 34 : main
Edges to nodes [32]

Node 32 : function body
Edges to nodes [29, 31]

Node 29 : Sequence
Edges to nodes [26, 28]

Node 26 : None
Edges to nodes [25, 24]

Node 25 : x

Node 24 : +
Edges to nodes [20, 23]

Node 20 : 1

Node 23 : *
Edges to nodes [21, 22]

Node 21 : 2

Node 22 : 3

Node 28 : Sequence
Edges to nodes [27]

Node 27 : skip

Node 31 : return operator
Edges to nodes [30]

Node 30 : null

